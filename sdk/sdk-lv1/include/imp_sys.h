/*
 * IMP System header file.
 *
 * Copyright (C) 2014 Ingenic Semiconductor Co.,Ltd
 * Author: Zoro <ykli@ingenic.cn>
 */

#ifndef __IMP_SYS_H__
#define __IMP_SYS_H__

#include "imp_common.h"

/**
 * @file
 * A sample for doxyfile of SDK-level1.
 */

/**
 * @mainpage
 * IMP SDK.
 */

#ifdef __cplusplus
#if __cplusplus
extern "C"
{
#endif
#endif /* __cplusplus */

/**
 * Initialize the IMP system.
 */
int IMP_SYS_Init(void);

/**
 * Deinitialize the IMP system.
 */
int IMP_SYS_Exit(void);

/**
 * Get the version of IMP.
 */
int IMP_SYS_GetVersion(IMP_VERSION_t *version);

/**
 * Get the timestamp.
 */
int IMP_SYS_GetCurPts(uint64_t *curPts);

/**
 * Rebase timestamp.
 */
int IMP_SYS_InitPtsBase(uint64_t basepts);

#if 0
int IMP_SYS_GetTime(struct tm *time);
int IMP_SYS_SetTime(struct tm *time);

int IMP_SYS_Shutdown(struct tm *time);
int IMP_SYS_Reboot(struct tm *time);
#endif

/**
 * Set register value.
 */
int IMP_SYS_SetReg(uint32_t u32Addr, uint32_t u32Value);

/**
 * Get register value.
 */
int IMP_SYS_GetReg(uint32_t u32Addr, uint32_t *pu32Value);

/**
 * Binds a data source and a data receiver.
 *
 * @param pstSrcChn       Pointer to the source channel.
 * @param pstDestChn      Pointer to the destination channel.
 * @return >= 0 in case of success, or a negative error code in case of failure
 *
 * A data receiver can be bound only to one data source.
 * The binding establishes an association between a data source and a data receiver. After
 * binding, the data generated by the data source is automatically transmitted to the data
 * receiver.
 * When the VIU and VDEC module are data sources, related channels act as transmitters
 * to transmit data to other modules. You can set the device ID to 0. Then the SDK does not
 * check the entered device ID.
 * When the VOU acts as the data source for transmitting writeback (WBC) data, the
 * device transmits data to other modules. You can set the channel ID to 0. Then the SDK
 * does not check the entered channel ID.
 * When the VPSS and VDEC module receive data, the device (GROUP) receives the data
 * from other modules. You can set the channel ID to 0. Then the SDK does not check the
 * entered channel ID.
 * The device ID and channel ID do not need to be specified in other cases.
 */
int IMP_SYS_Bind(IMPChannel *pstSrcChn, IMPChannel *pstDestChn);

/**
 * Unbind a data source from a data receiver.
 *
 * @param pstSrcChn       Pointer to the source channel.
 * @param pstDestChn      Pointer to the destination channel.
 * @return >= 0 in case of success, or a negative error code in case of failure
 */
int IMP_SYS_UnBind(IMPChannel *pstSrcChn, IMPChannel *pstDestChn);

#ifdef __cplusplus
#if __cplusplus
}
#endif
#endif /* __cplusplus */

#endif /* __IMP_SYS_H__ */
